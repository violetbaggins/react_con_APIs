{"version":3,"sources":["logo.svg","components/Pelicula.js","components/TiraPeliculas.js","components/Contador.js","components/Gif.js","components/Clima.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Pelicula","props","generos","className","title","rating","map","genero","TiraPeliculas","state","color","this","setState","alert","document","querySelector","style","backgroundColor","onMouseOver","cambiarSalmon","onMouseOut","cambiarRosa","onClick","cambiarColor","Component","Contador","numero","inicial","console","log","incrementar","decrementar","Gif","mostrarGif","data","gif","image_url","url","consecuencia","fetch","then","response","json","catch","error","traerGifNuevo","apiCall","contenido","width","src","Clima","mostrarClima","city","name","main","weather","temp","Math","round","elegirCiudad","traerClima","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.93e8f132.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nfunction Pelicula(props) {\r\n    let generos = props.generos;\r\n    \r\n    \r\n    \r\n    return (\r\n    <div className=\"card\">\r\n        <div className=\"card-title\">\r\n            <h2>{props.title}</h2>\r\n        </div>\r\n        \r\n        <div className=\"card-body\">\r\n            <div className=\"card-text text-left\">\r\n                <p><b>Rating:</b> {props.rating}</p>\r\n                <p><b>Géneros: </b></p>\r\n            <ul>\r\n                    {generos.map(genero => <li>{genero}</li>)}\r\n                </ul> \r\n            </div>\r\n        </div>\r\n     </div>\r\n    );\r\n  }\r\n\r\nexport default Pelicula;","import React, {Component} from 'react';\r\nimport Pelicula from './Pelicula'\r\n\r\nclass TiraPeliculas extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n            this.state ={\r\n                color : \"cadetblue\",\r\n        }\r\n    }\r\n    cambiarColor(){\r\n        this.setState({\r\n            color: \"seafoam\"\r\n        })\r\n    }\r\n\r\n    lanzaAlerta(){\r\n        alert(\"me clickeaste!\");\r\n    }\r\n\r\n    cambiarSalmon(){\r\n        document.querySelector('body').style.backgroundColor = \"salmon\"\r\n    }\r\n    \r\n    cambiarRosa(){\r\n        document.querySelector('body').style.backgroundColor = \"pink\"\r\n        \r\n    }\r\n    cambiarCard(){\r\n        document.querySelector('#App').style.backgroundColor = \"golden\"\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"card-deck m-2 border\" \r\n            /* onClick={this.lanzaAlerta} */\r\n            onMouseOver={this.cambiarSalmon}\r\n            onMouseOut={this.cambiarRosa}>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 border\">\r\n                        <p>{this.state.color}</p>\r\n                        <button className=\"btn btn-primary mb-2\" onClick={ () => this.cambiarColor()}>Click Me!</button>\r\n                    </div>\r\n\r\n                <Pelicula\r\n                \r\n                generos={[\"Horror\", \"Fantasia\", \"Terror\"]}\r\n                    title=\"Beetlejuice\"\r\n                    rating=\"8.9\"\r\n                />\r\n                <Pelicula \r\n                \r\n                generos={[\"fantasia\", \"aventuras\"]}\r\n                title=\"Laberinto\"\r\n                rating=\"7.8\"\r\n                />\r\n                <Pelicula \r\n                \r\n                generos={[\"Animacion\"]}\r\n                title=\"Parque Gordasico\"\r\n                rating=\"5.3\"\r\n                />\r\n                <Pelicula\r\n                \r\n                generos={[\"Ciencia Ficción\"]}\r\n                title=\"Juanito y los clonosaurios\"\r\n                rating=\"9.7\"\r\n                />\r\n                <Pelicula\r\n                \r\n                generos={[\"Acción\", \"aventuras\"]}\r\n                title=\"El hombre Radiactivo\"\r\n                rating=\"5.6\"\r\n                />\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n\r\nexport default TiraPeliculas;","import React, { Component } from 'react';\r\n\r\nclass Contador extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            numero : props.inicial\r\n        }\r\n    }\r\n\r\n    incrementar(){\r\n        this.setState( { numero: this.state.numero +1 } )\r\n    }\r\n\r\n    decrementar(){\r\n        this.setState( { numero: this.state.numero -1 } )\r\n    }\r\n    \r\n    componentDidMount(){\r\n        console.log(\"Me monté!!\");\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(\"Me Actualicé\");\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log(\"estoy renderizando\");\r\n        \r\n        return (\r\n            <div className=\"bg-light\">\r\n\r\n                <p>Soy el número: {this.state.numero}</p>\r\n                {/* Para q la funciones anden en el boton hay q escribirlas como arrow functions  */}\r\n                <button onClick= { () => this.incrementar () } >Incrementar</button>\r\n                <button onClick= { () => this.decrementar ()} >Decrementar</button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contador;","import React, { Component } from 'react';\r\n\r\nclass Gif extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            gif:\"\"\r\n        }\r\n    }\r\n\r\n    apiCall(url, consecuencia){\r\n        fetch(url)\r\n            .then( response => response.json() )\r\n            .then( data => consecuencia(data) )\r\n            .catch( error => console.log(error))\r\n    }\r\n\r\n    mostrarGif = (data)=>{\r\n        console.log(data);\r\n        \r\n       this.setState(\r\n           {\r\n            gif: data.data.image_url,\r\n            title: data.data.title\r\n           }\r\n        )\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"Me monté!!\");\r\n        this.traerGifNuevo()\r\n    }\r\n\r\n    traerGifNuevo(){\r\n        this.apiCall(\"https://api.giphy.com/v1/gifs/random?api_key=u0v6ngofcrY7dwgwgftKuWNMlgD12XOR&tag=&rating=G\", this.mostrarGif)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(\"Me Actualicé\");\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log(\"estoy renderizando\");\r\n        \r\n        let contenido;\r\n\r\n        if (this.state.gif == \"\"){\r\n            contenido = <p>Cargando...</p>\r\n        }else{\r\n        contenido = <div>\r\n            <h4 className=\"text-white\">{this.state.title}</h4>\r\n            <img width=\"400px\" src={this.state.gif}></img> \r\n            <p>{this.state.gif}</p>\r\n             </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"row bg-secondary\">\r\n                <div className=\"col-12 my-2\">\r\n                    {contenido}\r\n                </div>\r\n                <div className=\"col-12 my-2\">\r\n                    <button className=\"btn btn-warning\" onClick={ () => this.traerGifNuevo() }>Random Gif</button>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gif;","import React, { Component } from 'react';\r\n\r\nclass Clima extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            city: \"\",\r\n            main: \"\",\r\n            temp: \"\",\r\n            \r\n        }\r\n    }\r\n\r\n    apiCall(url, consecuencia){\r\n        fetch(url)\r\n            .then( response => response.json())\r\n            .then( data => consecuencia(data) )\r\n            .catch( error => console.log(error))\r\n    }\r\n\r\n    traerClima(elegirCiudad){\r\n        \r\n        this.apiCall(`http://api.openweathermap.org/data/2.5/weather?q=${elegirCiudad}&appid=cbf70166c750c640906414963fe4fa1b`, this.mostrarClima)\r\n    }\r\n\r\n    mostrarClima = (data)=>{\r\n        console.log(data);\r\n        \r\n       this.setState(\r\n           {\r\n           city: data.name,\r\n           main: data.weather[0].main,\r\n           temp: Math.round((data.main.temp)/10)\r\n           }\r\n        ) \r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"Soy el Clima y Me monté!!\");\r\n              \r\n        this.traerClima()\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(\"Soy el Clima y Me Actualicé\");\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log(\"Soy el Clima y estoy renderizando\");\r\n        \r\n        let contenido;\r\n\r\n        if (this.state.city === \"\"){\r\n            contenido = <p>Elegi una ciudad</p>\r\n        }else{\r\n        contenido = <div>\r\n             \r\n            <h3>Ciudad: {this.state.city}</h3>\r\n            <p>clima general: {this.state.main}</p>\r\n            <p>{this.state.temp}° Grados</p>\r\n            \r\n\r\n             </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"row bg-light\">\r\n                <div className=\"col-12 my-2\">\r\n                    {contenido}\r\n                </div>\r\n                <div className=\"col-12 my-2\">\r\n                    <button className=\"btn btn-warning mr-1\" onClick={ () => this.traerClima(\"Buenos+Aires,ar\") }>Clima Buenos Aires</button>\r\n                    <button className=\"btn btn-info mr-1\" onClick={ () => this.traerClima(\"London\") }>Clima London</button>\r\n                    <button className=\"btn btn-success mr-1\" onClick={ () => this.traerClima(\"San+Diego\") }>Clima San Diego</button>\r\n                    <button className=\"btn btn-secondary mr-1\" onClick={ () => this.traerClima(\"Osaka\") }>Clima Osaka</button>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clima;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TiraPeliculas from \"./components/TiraPeliculas\"\nimport Contador from \"./components/Contador\"\nimport Gif from \"./components/Gif\"\nimport Clima from \"./components/Clima\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"bg-dark text-white\" >\n        este es un header\n      </header>\n      <main>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <Clima/>\n          </div>\n          <div className=\"col-6\">\n            <Gif/>\n          </div>\n        </div>\n        <TiraPeliculas/>\n       <Contador inicial={0}/>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}